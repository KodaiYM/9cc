program ::= function*
function ::= ident "(" (Îµ | ident (, ident)*) ")" "{" statement* "}"
statement ::= expression ";"
						| "{" statement* "}"
						| "return" expr ";"
						| "if" "(" expr ")" statement ("else" statement)?
						| "for" "(" expr? ";" expr? ";" expr? ")" statement
						| "while" "(" expr ")" statement
expression ::= assign
assign ::= equation ("=" assign)?
equation ::= comparison ("==" comparison | "!=" comparison)*
comparison ::= add (">=" add | "<=" add | ">" add | "<" add)*
add ::= mul ("+" mul | "-" mul)*
mul ::= sign ("*" sign | "/" sign)*
sign ::= ("+" | "-") sign | address
address ::= ("*" | "&") address | primary
primary ::= num
					| ident
					| ident "(" ( Îµ | expression (, expression)* ) ")"
					| "(" expression ")"
